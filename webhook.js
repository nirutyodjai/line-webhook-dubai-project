export default async function handler(req, res) {
  if (req.method !== 'POST') return res.status(405).end();

  const events = req.body.events || [];

  for (const event of events) {
    // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏ö‡∏≠‡∏ó‡∏ñ‡∏π‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á LINE
    if (event.type === 'join' && event.source?.groupId) {
      await fetch('https://api.line.me/v2/bot/message/push', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}`
        },
        body: JSON.stringify({
          to: event.source.groupId,
          messages: [
            {
              type: 'text',
              text: `üë• Group ID ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠:\n${event.source.groupId}`
            }
          ]
        })
      });
    }

    // ‚úÖ ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤ "‡πÄ‡∏°‡∏ô‡∏π‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•" ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π
    if (event.type === 'message' && event.message?.text === '‡πÄ‡∏°‡∏ô‡∏π‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•') {
      await fetch('https://api.line.me/v2/bot/message/reply', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}`
        },
        body: JSON.stringify({
          replyToken: event.replyToken,
          messages: [
            {
              type: 'text',
              text: 'üìã ‡πÄ‡∏°‡∏ô‡∏π‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå, ‡∏î‡∏π‡∏†‡∏≤‡∏û, ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö, ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF, ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏ó'
            }
          ]
        })
      });
    }
  }

  return res.status(200).end();
}
