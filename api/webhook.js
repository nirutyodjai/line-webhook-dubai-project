export default async function handler(req, res) {
  if (req.method !== 'POST') return res.status(405).end();

  const events = req.body.events || [];

  for (const event of events) {
    // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏ö‡∏≠‡∏ó‡∏ñ‡∏π‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á LINE
    if (event.type === 'join' && event.source?.groupId) {
      await fetch('https://api.line.me/v2/bot/message/push', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}`
        },
        body: JSON.stringify({
          to: event.source.groupId,
          messages: [
            {
              type: 'text',
              text: `üë• Group ID ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠:\n${event.source.groupId}`
            }
          ]
        })
      });
    }

    // ‚úÖ ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ß‡πà‡∏≤ "‡πÄ‡∏°‡∏ô‡∏π‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•" ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π
    if (event.type === 'message' && event.message?.text === '‡πÄ‡∏°‡∏ô‡∏π‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•') {
      await fetch('https://api.line.me/v2/bot/message/reply', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${process.env.LINE_CHANNEL_ACCESS_TOKEN}`
        },
        body: JSON.stringify({
          replyToken: event.replyToken,
          messages: [
            {
              type: 'flex',
              altText: '‡πÄ‡∏°‡∏ô‡∏π‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö',
              contents: {
                type: 'bubble',
                header: {
                  type: 'box',
                  layout: 'vertical',
                  contents: [
                    {
                      type: 'text',
                      text: 'üëë ‡πÄ‡∏°‡∏ô‡∏π‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö',
                      weight: 'bold',
                      size: 'lg',
                      align: 'center'
                    }
                  ]
                },
                body: {
                  type: 'box',
                  layout: 'vertical',
                  spacing: 'sm',
                  contents: [
                    {
                      type: 'button',
                      style: 'primary',
                      action: {
                        type: 'message',
                        label: 'üì¶ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå',
                        text: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå'
                      }
                    },
                    {
                      type: 'button',
                      style: 'secondary',
                      action: {
                        type: 'message',
                        label: 'üñº ‡∏î‡∏π‡∏†‡∏≤‡∏û',
                        text: '‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î'
                      }
                    },
                    {
                      type: 'button',
                      style: 'secondary',
                      action: {
                        type: 'message',
                        label: 'üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ï‡∏£‡∏ß‡∏à',
                        text: '‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°'
                      }
                    },
                    {
                      type: 'button',
                      style: 'secondary',
                      action: {
                        type: 'message',
                        label: 'üì§ Export PDF',
                        text: '‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF'
                      }
                    },
                    {
                      type: 'button',
                      style: 'secondary',
                      action: {
                        type: 'message',
                        label: '‚öô ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏ó',
                        text: '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏ó'
                      }
                    }
                  ]
                }
              }
            }
          ]
        })
      });
    }
  }

  return res.status(200).end();
}
